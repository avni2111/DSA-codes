#include <stdio.h>
#include <stdlib.h>

struct node {
    struct node* prev;
    int data;
    struct node* next;
};

struct node* addtoempty(struct node* head, int data) {
    struct node* temp = malloc(sizeof(struct node));
    temp->prev = NULL;
    temp->data = data;
    temp->next = NULL;
    head = temp;
    return head;
}

struct node* addatend(struct node* head, int data) {
    struct node* temp = malloc(sizeof(struct node));
    temp->data = data;
    temp->next = NULL;

    if (head == NULL) {
        temp->prev = NULL;
        head = temp;
    } else {
        struct node* tp = head;
        while (tp->next != NULL) {
            tp = tp->next;
        }
        tp->next = temp;
        temp->prev = tp;
    }

    return head;
}

struct node* reverse(struct node* head) {
    struct node* current = head;
    struct node* temp = NULL;

    while (current != NULL) {
        temp = current->prev;
        current->prev = current->next;
        current->next = temp;
        current = current->prev;
    }

    if (temp != NULL) {
        head = temp->prev;
    }

    return head;
}

void print(struct node* head) {
    struct node* ptr = head;
    while (ptr != NULL) {
        printf("%d ", ptr->data);
        ptr = ptr->next;
    }
    printf("\n");
}

int main() {
    struct node* head = NULL;

    head = addtoempty(head, 34);
    head = addatend(head, 45);
    head = addatend(head, 7);

    printf("Original List: ");
    print(head);

    head = reverse(head);

    printf("Reverse List: ");
    print(head);


    while (head != NULL) {
        struct node* temp = head;
        head = head->next;
        free(temp);
    }

    return 0;
}

