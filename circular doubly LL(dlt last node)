#include <stdio.h>
#include <stdlib.h>

struct node {
    struct node* prev;
    int data;
    struct node* next;
};

struct node* addtoempty(int data) {
    struct node* temp = malloc(sizeof(struct node));
    temp->prev = temp;
    temp->data = data;
    temp->next = temp;
    return temp;
}

struct node* addatend(struct node* tail, int data) {
    struct node* newp = addtoempty(data);
    if (tail == NULL) {
        return newp;
    } else {
        struct node* temp = tail->next;
        newp->next = temp;
        newp->prev = tail;
        tail->next = newp;
        temp->prev = newp;
        return tail;
    }
}

struct node* dellast(struct node* tail) {
    struct node* temp;
    if (tail == NULL) {
        return tail;
    }
    temp = tail;
    if (temp == temp->next) {
        free(temp);
        tail = NULL;
    } else {
        tail = tail->prev;
        tail->next = temp->next;
        temp->next->prev = tail;
        free(temp);
    }
    return tail;
}

void print(struct node* tail) {
    if (tail == NULL) {
        printf("No nodes in the list\n");
    } else {
        struct node* temp = tail->next;
        do {
            printf("%d ", temp->data);
            temp = temp->next;
        } while (temp != tail->next);
    }
    printf("\n");
}

int main() {
    struct node* tail = NULL;
    tail = addtoempty(45);
    tail = addatend(tail, 66);
    tail = addatend(tail, 33);
    printf("List before delete: ");
    print(tail);

    tail = dellast(tail);
    printf("List after delete: ");
    print(tail);
    return 0;
}
